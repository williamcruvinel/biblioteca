// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  name         String        @db.VarChar(255)
  email        String        @unique @db.VarChar(100)
  password     String        @db.VarChar(100)
  typeUser     UserStatus    @default(Reader)
  reservations Reservation[]

  @@map("users")
}

enum UserStatus {
  Administrator
  Reader

  @@map("userStatus")
}

model Reservation {
  id         Int                @id @default(autoincrement())
  reservedAt DateTime           @default(now())
  returnAt   DateTime
  status     StatusReservations @default(Active)
  userId     Int
  user       User               @relation(fields: [userId], references: [id])
  books      Book[]

  @@map("reservations")
}

enum StatusReservations {
  Active
  Finished
  Overdue

  @@map("statusReservations")
}

model Book {
  id        Int          @id @default(autoincrement())
  title     String       @db.VarChar(255)
  category  String       @db.VarChar(255)
  launch    DateTime
  status    BookStatus   @default(Available)
  amount    Int
  authorId  Int
  author    Author       @relation(fields: [authorId], references: [id])
  reserveId Int?
  reserve   Reservation? @relation(fields: [reserveId], references: [id])

  @@map("books")
}

enum BookStatus {
  Available
  Reserved

  @@map("bookStatus")
}

model Author {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(255)
  book Book[]

  @@map("authors")
}
